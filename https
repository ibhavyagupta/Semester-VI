in my local, on the first load, everything is working fine but on the Target after uploading the code, i am getting the following errors:
Uncaught ReferenceError: showSupport is not defined
    at HTMLButtonElement.onclick (?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117:141466)
4?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117 Uncaught ReferenceError: showSupport is not defined
    at HTMLButtonElement.onclick (?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117:141466)
onclick @ ?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117
?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117 Uncaught ReferenceError: showProducts is not defined
    at HTMLButtonElement.onclick (?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117:141466)
onclick @ ?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117
?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117 Uncaught ReferenceError: showSupport is not defined
    at HTMLButtonElement.onclick (?at_preview_token=vAVk2sFutrMmEIXOK6OYjg&at_preview_index=1_2&at_preview_listed_activities_only=true:117:141466)

<script>
                  document.addEventListener("DOMContentLoaded", function () {
                    const productsTab =
                      document.getElementById("wr-productsTab");
                    const supportTab = document.getElementById("supportTab");
                    const productsContent =
                      document.getElementById("productsContent");
                    const supportContent =
                      document.getElementById("supportContent");

                    productsTab.onclick = function () {
                      productsTab.classList.add("active");
                      supportTab.classList.remove("active");
                      productsContent.classList.add("active");
                      supportContent.classList.remove("active");
                    };

                    supportTab.onclick = function () {
                      supportTab.classList.add("active");
                      productsTab.classList.remove("active");
                      supportContent.classList.add("active");
                      productsContent.classList.remove("active");
                    };

                    const cards = document.querySelectorAll(".wr-ptql-card h2");
                    cards.forEach((header) => {
                      header.addEventListener("click", () => {
                        if (window.innerWidth <= 767) {
                          const card = header.parentElement;
                          const links = card.querySelector(".wr-ptql-links");
                          const isCurrentlyActive =
                            card.classList.contains("active");

                          if (isCurrentlyActive) {
                            card.classList.remove("active");
                            links.style.maxHeight = "0px";
                          } else {
                            card.classList.add("active");
                            const scrollHeight = links.scrollHeight;
                            links.style.maxHeight = scrollHeight + "px";

                            setTimeout(() => {
                              if (card.classList.contains("active")) {
                                links.style.maxHeight = "auto";
                              }
                            }, 400);
                          }
                        }
                      });
                    });

                    window.addEventListener("resize", () => {
                      if (window.innerWidth > 767) {
                        const allCards =
                          document.querySelectorAll(".wr-ptql-card");
                        allCards.forEach((card) => {
                          card.classList.remove("active");
                          const links = card.querySelector(".wr-ptql-links");
                          if (links) {
                            links.style.maxHeight = "";
                          }
                        });
                      } else {
                        const activeCards = document.querySelectorAll(
                          ".wr-ptql-card.active"
                        );
                        activeCards.forEach((card) => {
                          const links = card.querySelector(".wr-ptql-links");
                          if (links) {
                            const scrollHeight = links.scrollHeight;
                            links.style.maxHeight = scrollHeight + "px";
                          }
                        });
                      }
                    });

                    window.addEventListener("orientationchange", () => {
                      setTimeout(() => {
                        if (window.innerWidth <= 767) {
                          const activeCards = document.querySelectorAll(
                            ".wr-ptql-card.active"
                          );
                          activeCards.forEach((card) => {
                            const links = card.querySelector(".wr-ptql-links");
                            if (links) {
                              const scrollHeight = links.scrollHeight;
                              links.style.maxHeight = scrollHeight + "px";
                            }
                          });
                        }
                      }, 100);
                    });
                  });
                </script>
